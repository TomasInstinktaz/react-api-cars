{"version":3,"sources":["serviceWorker.js","components/Navbar/Navbar.js","api/api.js","redux/cars-reducer.js","redux/redux-store.js","components/Static/Static.js","components/Static/StaticContainer.js","components/Dynamic/Dynamic.js","components/Dynamic/DynamicContainer.js","components/Card/Card.js","components/Card/CardContainer.js","components/Carousel/Carousel.js","components/Carousel/CarouselContainer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","to","carsAPI","axios","get","then","response","initialState","posts","getCars","dispatch","a","type","newPost","data","carsReducer","state","action","console","log","reducers","combineReducers","carsPage","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","Static","props","marke","modelis","metai","kaina","Table","StaticContainer","this","React","Component","connect","withRouter","Dynamic","Button","variant","onClick","listItems","map","p","index","key","DynamicContainer","CardComponent","Card","style","display","width","Img","src","nuotraukos","Body","Title","Text","CardContainer","CarouselComponent","Carousel","Item","className","alt","CarouselContainer","App","path","render","SuperApp","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42c5a72f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n/*\r\n    Routes:\r\n    1 task - Static\r\n    2 task - Dynamic\r\n    3 task - Card\r\n    4 task - Carousel\r\n */\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <div>\r\n                <NavLink to=\"/static\">Static</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/dynamic\">Dynamic</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/card\">Card</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/carousel\">Carousel</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","\r\n//https://backend.daviva.lt/API/InformacijaTestui\r\n import axios from \"axios\";\r\n\r\nexport const carsAPI = {\r\n    getCars() {\r\n        return axios.get(`https://backend.daviva.lt/API/InformacijaTestui`)\r\n            .then(response => {\r\n                // console.log(response)\r\n\r\n                return response;\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {carsAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\n\r\nconst initialState = {\r\n    posts: []\r\n}\r\nconst carsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n                console.log(state)\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {...action.newPost}],\r\n                // postai: [\r\n                //     ...state.postai,\r\n                //     {...action.newPost},\r\n                // ],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n// export const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost})\r\n\r\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost})\r\n\r\n\r\n\r\nexport const getCars = () => async (dispatch) => {\r\n    const response = await carsAPI.getCars();\r\n    dispatch(addPostActionCreator(response.data));\r\n}\r\n\r\nexport default carsReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport carsReducer from \"./cars-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    carsPage: carsReducer\r\n});\r\n\r\nconst store = createStore(reducers, compose(\r\n    applyMiddleware(thunk),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n));\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst Static = (props) => {\r\n\r\n    if (props.posts == null) {\r\n        return (\r\n            <div>Props empty</div>\r\n        )\r\n    }\r\n\r\n    const { marke, modelis, metai, kaina } = props.posts\r\n\r\n        return (\r\n            <Table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Marke</th>\r\n                    <th>Modelis</th>\r\n                    <th>Metai</th>\r\n                    <th>Kaina</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <td>{marke}</td>\r\n                    <td>{modelis}</td>\r\n                    <td>{metai}</td>\r\n                    <td>{kaina}</td>\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Static;\r\n","import React from 'react';\r\n// import Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCars} from \"../../redux/cars-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport Static from \"./Static\";\r\n// import {getCars} from \"../../redux/cars-reducer\";\r\n\r\nclass StaticContainer extends React.Component {\r\n\r\n    // refreshProfile() {\r\n    //     this.props.posts.getCars();\r\n    // }\r\n\r\n\r\n    componentDidMount() {\r\n       this.props.getCars()\r\n    }\r\n\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if (this.props.posts != prevProps.posts ) {\r\n    //         this.refreshProfile();\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Static {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        posts: state.carsPage.posts,\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getCars}),\r\n    withRouter\r\n)(StaticContainer);\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Dynamic = (props) => {\r\n\r\n    if (props.posts == null) {\r\n        return (\r\n            <Button variant=\"secondary\" onClick={props.getCars}>Add New Posts</Button>\r\n        )\r\n    }\r\n    const { posts } = props\r\n\r\n    const listItems = posts.map((p, index) =>\r\n            <tr key={index}>\r\n                <td>{p.marke}</td>\r\n                <td>{p.modelis}</td>\r\n                <td>{p.metai}</td>\r\n                <td>{p.kaina}</td>\r\n            </tr>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Marke</th>\r\n                    <th>Modelis</th>\r\n                    <th>Metai</th>\r\n                    <th>Kaina</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listItems}\r\n                </tbody>\r\n            </Table>\r\n\r\n            <Button variant=\"secondary\" onClick={props.getCars}>Add New Posts</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dynamic;\r\n","import React from 'react';\r\nimport Dynamic from \"./Dynamic\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCars} from \"../../redux/cars-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass DynamicContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Dynamic {...this.props}\r\n                    posts={this.props.posts}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        posts: state.carsPage.posts,\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getCars}),\r\n    withRouter\r\n)(DynamicContainer);\r\n","import React from 'react'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport CardColumns from \"react-bootstrap/CardColumns\";\r\n\r\nconst CardComponent = (props) => {\r\n\r\n    if (props.posts == null) {\r\n        return (\r\n            <Button variant=\"secondary\" onClick={props.getCars}>Add New Posts</Button>\r\n        )\r\n    }\r\n\r\n    // if (props.postai == null) {\r\n    //     return (\r\n    //         <div>no</div>\r\n    //     )\r\n    // }\r\n    const { posts } = props\r\n    const listItems = posts.map((p, index) =>\r\n\r\n        <Card key={index} style={{display: 'inline-block', width: '33.3%' }}>\r\n            <Card.Img variant=\"top\" src={p.nuotraukos[0]}/>\r\n            <Card.Body>\r\n                <Card.Title>{p.marke}</Card.Title>\r\n                <Card.Text>\r\n                    {p.modelis}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    {p.metai}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    {p.kaina}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div style={{display: 'block', width: '100%'}}>\r\n                {listItems}\r\n            </div>\r\n\r\n            <Button variant=\"secondary\" onClick={props.getCars}>Add New Posts</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getCars} from \"../../redux/cars-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport CardComponent from \"./Card\";\r\n\r\nclass CardContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <CardComponent {...this.props}\r\n                     posts={this.props.posts}\r\n                    // postai={this.props.postai}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return ({\r\n        posts: state.carsPage.posts,\r\n        // postai: state.carsPage.postai\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getCars}),\r\n    withRouter\r\n)(CardContainer);\r\n","import React, {useState} from 'react'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nconst CarouselComponent = (props) => {\r\n\r\n    if (props.posts == null) {\r\n        return (\r\n            <Button variant=\"secondary\" onClick={props.getCars}>Add New Posts</Button>\r\n        )\r\n    }\r\n    //\r\n    // const [index, setIndex] = useState(0);\r\n    // const [direction, setDirection] = useState(null);\r\n    //\r\n    // const handleSelect = (selectedIndex, e) => {\r\n    //     setIndex(selectedIndex);\r\n    //     setDirection(e.direction);\r\n    // };\r\n\r\n\r\n\r\n    const { posts } = props\r\n\r\n\r\n\r\n    const listItems = posts.map((p, index) =>\r\n\r\n        <Card key={index} style={{display: 'inline-block', width: '33.3%' }}>\r\n            {/*<Card.Img variant=\"top\" src={p.nuotraukos[0]}/>*/}\r\n            <Carousel >\r\n                {p.nuotraukos.map((f, index) => {\r\n                    return (<Carousel.Item key={index}>\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={f}\r\n                            alt=\"First slide\"\r\n                        />\r\n\r\n                    </Carousel.Item>)\r\n                })}\r\n            </Carousel>\r\n            <Card.Body>\r\n                <Card.Title>{p.marke}</Card.Title>\r\n                <Card.Text>\r\n                    {p.modelis}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    {p.metai}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    {p.kaina}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div style={{display: 'block', width: '100%'}}>\r\n                {listItems}\r\n            </div>\r\n\r\n            <Button variant=\"secondary\" onClick={props.getCars}>Add New Posts</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarouselComponent;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getCars} from \"../../redux/cars-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport CarouselComponent from \"./Carousel\";\r\n\r\nclass CarouselContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <CarouselComponent {...this.props}\r\n                           posts={this.props.posts}\r\n                // postai={this.props.postai}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return ({\r\n        posts: state.carsPage.posts,\r\n        // postai: state.carsPage.postai\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getCars}),\r\n    withRouter\r\n)(CarouselContainer);\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport StaticContainer from \"./components/Static/StaticContainer\";\nimport DynamicContainer from \"./components/Dynamic/DynamicContainer\";\nimport CardContainer from \"./components/Card/CardContainer\";\nimport CarouselContainer from \"./components/Carousel/CarouselContainer\";\n\n\nclass App extends Component {\n\n\n  componentDidMount() {\n    // axios.get(`https://backend.daviva.lt/API/InformacijaTestui`)\n    //     .then(res => {\n    //       const cars = res.data;\n    //       this.setState({ cars });\n    //     })\n\n    // carsAPI()\n    // console.log(store.getState())\n  }\n\n  render() {\n\n    // const {cars} = this.state\n\n\n    return (\n        <div className='app-wrapper'>\n          <Navbar/>\n\n          <Switch>\n            <Route path=\"/static\"\n                   render={() => <StaticContainer/>}>\n            </Route>\n            <Route path=\"/dynamic\"\n                   render={() => <DynamicContainer/>}>\n            </Route>\n            <Route path=\"/card\"\n                   render={() => <CardContainer/>}>\n            </Route>\n            <Route path=\"/carousel\"\n                   render={() => <CarouselContainer/>}>\n            </Route>\n          </Switch>\n        </div>\n    )\n  }\n}\n\n// let AppContainer = compose(\n//     withRouter,\n//     connect({}, {initializeApp}))(App);\n\nconst SuperApp = (props) => {\n  console.log('dfg')\n  console.log(store.getState())\n  return <Router >\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router >\n}\n\nexport default SuperApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SuperApp from \"./App\";\n\nReactDOM.render(<SuperApp/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}